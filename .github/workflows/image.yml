name: Build OCI Image

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build OCI image with melange and apko
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Set version
        id: version
        run: |
          VERSION=""
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION=$(git describe --tags --always)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Install melange
        uses: chainguard-dev/actions/setup-melange@main

      - name: Install apko
        uses: chainguard-dev/actions/setup-apko@main

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package with melange
        run: |
          melange build \
            --arch amd64,arm64 \
            --signing-key <(cosign generate-key-pair --output-key-prefix cosign) \
            --keyring-append cosign.pub \
            --out-dir ./packages \
            --repository-append ./packages \
            --version ${{ steps.version.outputs.version }} \
            melange.yaml

      - name: Build image with apko
        run: |
          apko build \
            --keyring cosign.pub \
            --arch amd64,arm64 \
            --repository ./packages \
            apko.yaml \
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }} \
            image.tar \
            ghcr.io/${{ github.repository }}.json

      - name: Push image
        if: github.event_name != 'pull_request'
        run: |
          crane push image.tar ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          
          # Tag as latest if on main branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            crane tag ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }} latest
          fi

      - name: Sign image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign --key cosign.key ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}

      - name: Upload SBOM
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: ghcr.io/${{ github.repository }}.json